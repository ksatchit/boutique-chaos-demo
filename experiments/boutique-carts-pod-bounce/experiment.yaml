kind: Workflow
apiVersion: argoproj.io/v1alpha1
metadata:
  name: boutique-carts-pod-bounce-1657185180
  namespace: hce
  labels:
    subject: boutique-carts-pod-bounce
spec:
  templates:
    - name: custom-chaos
      steps:
        - - name: install-chaos-faults
            template: install-chaos-faults
        - - name: pod-delete-o2z
            template: pod-delete-o2z
    - name: install-chaos-faults
      inputs:
        artifacts:
          - name: pod-delete-o2z
            path: /tmp/pod-delete-o2z.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Deletes a pod belonging to a deployment/statefulset/daemonset
                kind: ChaosExperiment

                metadata:
                  name: pod-delete
                  labels:
                    name: pod-delete
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: ci
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: chaosnative/go-runner:3.0.1-saas
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-delete
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "15"
                      - name: RAMP_TIME
                        value: ""
                      - name: FORCE
                        value: "true"
                      - name: CHAOS_INTERVAL
                        value: "5"
                      - name: PODS_AFFECTED_PERC
                        value: "" 
                      - name: TARGET_PODS
                        value: ""
                      - name: TARGET_CONTAINER
                        value: ''
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                      - name: DEFAULT_HEALTH_CHECK
                        value: 'false'
                    labels:
                      name: pod-delete
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: ci
      container:
        name: ""
        image: litmuschaos/k8s:2.13.0
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/pod-delete-o2z.yaml -n
            {{workflow.parameters.adminModeNamespace}} && sleep 30
    - name: pod-delete-o2z
      inputs:
        artifacts:
          - name: pod-delete-o2z
            path: /tmp/chaosengine-pod-delete-o2z.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  generateName: pod-delete-o2z
                  labels:
                    instance_id: 2760c483-64b6-4b65-a70d-368b72e7549b
                    workflow_name: custom-chaos-workflow-1657185180
                spec:
                  appinfo:
                    appns: boutique
                    applabel: app=cartservice
                    appkind: deployment
                  engineState: active
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-delete
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "30"
                            - name: CHAOS_INTERVAL
                              value: "10"
                            - name: FORCE
                              value: "false"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                        probe:
                          - name: carts-resource-status-check
                            type: cmdProbe
                            mode: Edge
                            runProperties:
                              probeTimeout: 1000
                              retry: 0
                              interval: 1
                              stopOnFailure: true
                            cmdProbe/inputs:
                              command: ./healthcheck -name pod-level
                              source:
                                image: chaosnative/go-runner:3.0.1-saas
                                inheritInputs: true
                              comparator:
                                type: string
                                criteria: contains
                                value: "[P000]"
                          - name: cart-service-availability-check
                            type: httpProbe
                            mode: Continuous
                            httpProbe/inputs:
                              url: http://frontend.boutique.svc.cluster.local:80/cart
                              insecureSkipVerify: false
                              method:
                                get:
                                  criteria: ==
                                  responseCode: "200"
                            runProperties:
                              probeTimeout: 2000
                              interval: 5
                              retry: 4
                              probePollingInterval: 2
                              initialDelaySeconds: 1
                              stopOnFailure: false
                          - name: website-latency-check
                            type: promProbe
                            mode: Edge
                            promProbe/inputs:
                              endpoint: http://prometheus-k8s.monitoring.svc.cluster.local:9090
                              query: avg_over_time(probe_duration_seconds{job=\"prometheus-blackbox-exporter\", instance=\"frontend:80\"}[60s:1s])*1000
                              comparator:
                                type: float
                                criteria: <=
                                value: "120"
                            runProperties:
                              probeTimeout: 5
                              interval: 2
                              retry: 2
                              probePollingInterval: 1
                              initialDelaySeconds: 1
                              stopOnFailure: false
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: litmuschaos/litmus-checker:2.13.0
        args:
          - -file=/tmp/chaosengine-pod-delete-o2z.yaml
          - -saveName=/tmp/engine-name
    - name: cleanup-chaos-resources
      container:
        name: ""
        image: litmuschaos/k8s:latest
        command:
          - sh
          - -c
        args:
          - "kubectl delete chaosengine -l 'instance_id in
            (2760c483-64b6-4b65-a70d-368b72e7549b, )' -n
            {{workflow.parameters.adminModeNamespace}} "
  entrypoint: custom-chaos
  arguments:
    parameters:
      - name: adminModeNamespace
        value: hce
  serviceAccountName: argo-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
